<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.healthcare.dao.ReceiptAndOpinionsDao">
	<insert id="insertReceipt" >
		insert into receipt_and_opinions
		(receipt_state, patient_id)
		values
		('대기', #{patient_id})
	</insert>

 	<select id="selectAllReceipt" resultType="receiptAndOpinions">
 		select p.patient_id, p.patient_name, p.patient_sex, p.patient_phone, 
 		 		rao.receipt_id, rao.receipt_state, rao.receipt_datetime
		from receipt_and_opinions rao, patients p
		where rao.patient_id = p.patient_id and rao.receipt_state != '완료'
		order by rao.receipt_datetime
	</select>
	
	<select id="selectReceiptId" parameterType="int" resultType="int">
		select receipt_id
		from receipt_and_opinions
		where patient_id = #{patient_id} and receipt_state='대기'
	</select>
	
	<delete id="deleteReceiptById">
		delete from receipt_and_opinions
		where receipt_id = #{receipt_id}
	</delete>
	
	<update id="updateReceipt">
		update receipt_and_opinions
		set receipt_state = #{nextState}
		where receipt_id = #{receipt_id}
	</update>
	
	<select id="selectSearchPatientIdOpinionList" resultType="receiptAndOpinions">
		select receipt_id, date_format(receipt_datetime, '%Y-%m-%d') as receipt_datetime, receipt_state, diagnostic_test_state, receipt_opinion, receipt_uniqueness, patient_id, receipt_result_state
		from receipt_and_opinions
		where patient_id = #{patient_id}
		order by receipt_id DESC
	</select>
	
	<select id="selectSearchDateOpinionList" resultType="receiptAndOpinions">
		select receipt_id, date_format(receipt_datetime, '%Y-%m-%d') as receipt_datetime, receipt_state, diagnostic_test_state, receipt_opinion, receipt_uniqueness, patient_id, receipt_result_state
		from receipt_and_opinions
		where receipt_datetime Like CONCAT('%', #{receipt_datetime}, '%')
		order by receipt_id DESC
	</select>
	
	<select id="selectSearchPatientNameOpinionList" resultType="receiptAndOpinions">
		select r.receipt_id, date_format(receipt_datetime, '%Y-%m-%d') as receipt_datetime, r.receipt_state, r.diagnostic_test_state, r.receipt_opinion, r.receipt_uniqueness, r.patient_id, r.receipt_result_state
		from receipt_and_opinions r, patients p
		where r.patient_id = p.patient_id and p.patient_name = #{patient_name}
		order by receipt_id DESC
	</select>
	
	<select id="selectSearchPatientIdAndDateList"  resultType="receiptAndOpinions">
		select receipt_id, date_format(receipt_datetime, '%Y-%m-%d') as receipt_datetime, receipt_state, diagnostic_test_state, receipt_opinion, receipt_uniqueness, patient_id, receipt_result_state
		from receipt_and_opinions
		where receipt_datetime Like CONCAT('%', #{receipt_datetime}, '%') and patient_id = #{patient_id}
		order by receipt_id DESC
	</select>
	
	<select id="selectSearchPatientIdAndNameList"  resultType="receiptAndOpinions">
		select r.receipt_id, date_format(receipt_datetime, '%Y-%m-%d') as receipt_datetime, r.receipt_state, r.diagnostic_test_state, r.receipt_opinion, r.receipt_uniqueness, r.patient_id, r.receipt_result_state
		from receipt_and_opinions r, patients p
		where r.patient_id = p.patient_id and p.patient_name = #{patient_name} and r.patient_id = #{patient_id}
		order by receipt_id DESC
	</select>
	
	<select id="selectSearchPatientNameAndDateList"  resultType="receiptAndOpinions">
		select r.receipt_id, date_format(receipt_datetime, '%Y-%m-%d') as receipt_datetime, r.receipt_state, r.diagnostic_test_state, r.receipt_opinion, r.receipt_uniqueness, r.patient_id, r.receipt_result_state
		from receipt_and_opinions r, patients p
		where r.patient_id = p.patient_id and receipt_datetime Like CONCAT('%', #{receipt_datetime}, '%') and p.patient_name = #{patient_name}
		order by receipt_id DESC
	</select>
	
	<select id="selectSearchAllList"  resultType="receiptAndOpinions">
		select r.receipt_id, date_format(receipt_datetime, '%Y-%m-%d') as receipt_datetime, r.receipt_state, r.diagnostic_test_state, r.receipt_opinion, r.receipt_uniqueness, r.patient_id, r.receipt_result_state
		from receipt_and_opinions r, patients p
		where r.patient_id = p.patient_id and receipt_datetime Like CONCAT('%', #{receipt_datetime}, '%') and p.patient_name = #{patient_name} and r.patient_id = #{patient_id}
		order by receipt_id DESC
	</select>
	
	<update id="updateReceiptState">
		update receipt_and_opinions
		set receipt_state = '검사중', diagnostic_test_state='검사대기', receipt_opinion='검사 완료 후 소견 작성 필요', receipt_result_state='ⓧ' 
		where receipt_id = #{receipt_id}
	</update>
	
	<select id="selectFatientOpinionsList" resultType="receiptAndOpinions">
		select receipt_id, date_format(receipt_datetime, '%Y-%m-%d') as receipt_datetime, receipt_state, diagnostic_test_state, receipt_opinion, receipt_uniqueness, patient_id, receipt_result_state
		from receipt_and_opinions
		where patient_id = #{patient_id}
		order by receipt_id DESC
	</select>
	
	<select id="selectOpinion" resultType="receiptAndOpinions">
		select receipt_id, date_format(receipt_datetime, '%Y-%m-%d') as receipt_datetime, receipt_state, diagnostic_test_state, receipt_opinion, receipt_uniqueness, patient_id, receipt_result_state
		from receipt_and_opinions
		where receipt_id = #{receipt_id}
	</select>
	
	<update id="updateInsertOpinion">
		update receipt_and_opinions
		set receipt_opinion = #{receipt_opinion}, receipt_uniqueness = #{receipt_uniqueness}, receipt_state = '수납전', diagnostic_test_state = '처방완료'
		where receipt_id = #{receipt_id}
	</update>
	
	<update id="updateReceiptOpinion">
		update receipt_and_opinions
		set receipt_opinion = #{receipt_opinion}
		where receipt_id = #{receipt_id}
	</update>
	
	<update id="updateReceiptUniqueness">
		update receipt_and_opinions
		set receipt_uniqueness = #{receipt_uniqueness}
		where receipt_id = #{receipt_id}
	</update>
	
	<update id="updateTestAndReceiptState">
		update receipt_and_opinions
		set diagnostic_test_state = '처방완료', receipt_state = '수납전'
		where receipt_id = #{receipt_id}
	</update>
	
	<select id="selectReadyCount" resultType="int">
      	select count(*)
		from receipt_and_opinions
		where receipt_state = '대기'
    </select>
    
    <select id="selectTreatmentCount" resultType="int">
      	select count(*)
		from receipt_and_opinions
		where receipt_state = '진료중'
    </select>
    
    <select id="selectInspectionCount" resultType="int">
      	select count(*)
		from receipt_and_opinions
		where receipt_state = '검사중'
    </select>
    
    <select id="selectPaymentCount" resultType="int">
      	select count(*)
		from receipt_and_opinions
		where receipt_state = '수납전'
    </select>
	
	<select id="selectPatientStateList" parameterType="string" resultType="receiptAndOpinions">
		select distinct rao.receipt_id, rao.receipt_state, rao.diagnostic_test_state, p.patient_id, p.patient_name, p.patient_sex, 
		cast(date_format(now(), '%Y') as unsigned) - cast(case 
			when substring(patient_ssn, 8, 1) in ('1', '2', '5', '6') then '1900' + substring(patient_ssn, 1, 2)
			when substring(patient_ssn, 8, 1) in ('3', '4', '7', '8') then '2000' + substring(patient_ssn, 1, 2)
			end as unsigned) + 1 as patient_age  
		<if test="type == '전체'">
			from receipt_and_opinions as rao, patients as p, diagnostic_lists as dl
			where rao.patient_id = p.patient_id and rao.receipt_id = dl.receipt_id and rao.diagnostic_test_state != '' and date(receipt_datetime) = date(now())
		</if>
		<if test="type != '전체'">
			from receipt_and_opinions as rao, diagnostic_lists as dl, searchs as s, bundles as b, patients as p
			where rao.receipt_id = dl.receipt_id and dl.search_id = s.search_id and s.bundle_id = b.bundle_id and b.bundle_lab = #{type} and rao.patient_id = p.patient_id and rao.diagnostic_test_state != '' and date(receipt_datetime) = date(now())
		</if>
		<if test="state == 'whole'">
			and diagnostic_test_state != '검사완료' and diagnostic_test_state != "" and diagnostic_test_state != '처방완료'
		</if>
		<if test="state != 'whole'">
			<if test="state != '검사완료'">
				and diagnostic_test_state = #{state}			
			</if>
			<if test="state == '검사완료'">
				and diagnostic_test_state in ('검사완료', '처방완료')			
			</if>
		</if>
	</select>
	
	<select id="getReceiptDataByDate" resultType="receiptAndOpinions">
 		select p.patient_id, p.patient_name, p.patient_sex, p.patient_phone, 
 		 		rao.receipt_id, date_format(rao.receipt_datetime, '%y-%m-%d') as receipt_datetime, rao.receipt_result_state
		from receipt_and_opinions rao, patients p
		where rao.patient_id = p.patient_id and rao.receipt_datetime Like CONCAT('%', #{receipt_datetime}, '%') and receipt_result_state in ('ⓞ', 'ⓧ')
	</select>
	
	<select id="getReceiptDataByName" resultType="receiptAndOpinions">
 		select p.patient_id, p.patient_name, p.patient_sex, p.patient_phone, 
 		 		rao.receipt_id, date_format(rao.receipt_datetime, '%y-%m-%d') as receipt_datetime, rao.receipt_result_state
		from receipt_and_opinions rao, patients p
		where rao.patient_id = p.patient_id and p.patient_name Like CONCAT('%', #{patient_name}, '%') and rao.receipt_datetime Like CONCAT('%', #{receipt_datetime}, '%') and receipt_result_state in ('ⓞ', 'ⓧ')
	</select>

	<select id="selectStateChart" resultType="stateCharts">
		select count(case when diagnostic_test_state = '검사대기' then 1 end) as waiting,
			   count(case when diagnostic_test_state = '검사중' then 1 end) as doing,
			   count(case when diagnostic_test_state in ('검사완료', '처방완료') then 1 end) as complete
		       from (
		       select distinct rao.receipt_id, rao.diagnostic_test_state
					 from receipt_and_opinions as rao, diagnostic_lists as dl
					 where rao.receipt_id = dl.receipt_id and date(receipt_datetime) = date(now())
		       ) as rad
	</select>
	
	<update id="updatePatientState" parameterType="String">
		update receipt_and_opinions set diagnostic_test_state = 
		case
		when ((select count(*) from diagnostic_lists where receipt_id = #{receiptId} and diagnostic_list_state = '검사대기' ) = (select count(*) from diagnostic_lists where receipt_id = #{receiptId})) then '검사대기'
		when ((select count(*) from diagnostic_lists where receipt_id = #{receiptId} and diagnostic_list_state = '검사접수') >= '1' or (select count(*) from diagnostic_lists where receipt_id = #{receiptId} and diagnostic_list_state = '검사완료') between '1' and (select count(*) from diagnostic_lists where receipt_id = #{receiptId}) - 1) then '검사중'
		when ((select count(*) from diagnostic_lists where receipt_id = #{receiptId} and diagnostic_list_state = '검사완료') = (select count(*) from diagnostic_lists where receipt_id = #{receiptId})) then '검사완료'
		end
		where receipt_id = #{receiptId};
	</update>
	
	<update id="updateReceiptStates" parameterType="String">
		update receipt_and_opinions set receipt_state = #{state}
		where receipt_id = #{receiptId}
	</update>

	<update id="updateFinishedResultStateByReceipt">
		update receipt_and_opinions SET receipt_result_state = 'ⓞ'
		where receipt_id in (
				select dl.receipt_id
				from diagnostic_lists dl, diagnostic_results dr
				where dl.diagnostic_list_id = dr.diagnostic_list_id and diagnostic_results_id = #{diagnostic_results_id})
	</update>
	
	<select id="getReceiptDataByRecieptId" resultType="receiptAndOpinions">
 		select p.patient_id, p.patient_name, p.patient_sex, p.patient_phone, 
 		 		rao.receipt_id, date_format(rao.receipt_datetime, '%y-%m-%d') as receipt_datetime, rao.receipt_result_state
		from receipt_and_opinions rao, patients p
		where rao.patient_id = p.patient_id and rao.receipt_id = #{receipt_id} and receipt_result_state in ('ⓞ', 'ⓧ')
	</select>
	
	<select id="selectReceiptState" parameterType="int" resultType="String">
		select receipt_state
		from receipt_and_opinions
		where receipt_id = #{receiptId}
	</select>
	
	<update id="updatePaymentBeforeState">
		update receipt_and_opinions
		set diagnostic_test_state = '검사완료', receipt_opinion = '추후 재진 예정'
		where receipt_id = #{receipt_id}
	</update>
</mapper>
