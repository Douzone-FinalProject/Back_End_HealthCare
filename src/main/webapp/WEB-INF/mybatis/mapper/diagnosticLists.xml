<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.healthcare.dao.DiagnosticListsDao">
	<!--  
	<resultMap id="detailData" type="diagnosticLists">
		<result property="diagnostic_list_id" column="diagnostic_list_id"/>
		<result property="diagnostic_list_barcode" column="diagnostic_list_barcode"/>
		<result property="diagnostic_list_state" column="diagnostic_list_state"/>
		<result property="diagnostic_specimen_number" column="diagnostic_specimen_number"/>
		<result property="receipt_id" column="receipt_id"/>
		<result property="search_id" column="search_id"/>
		<association property="searchs" javaType="Searchs">
			<id property="search_id" column="search_id"/>
			<result property="symptom_id" column="symptom_id"/> 
		</association>
		<collection property="bundles" ofType="bundles"/>
	</resultMap>
	-->
	
	<insert id="insertRequestTest" parameterType="java.util.List">
		insert into diagnostic_lists
		(receipt_id, search_id, doctor_name)
		values
		<foreach collection="list" item="item" separator=" , ">
			(
				#{item.receipt_id},
				#{item.search_id},
				#{item.doctor_name}
			)
		</foreach>
	</insert>
	
	<select id="selectTestStateDetailLIst" parameterType="int" resultType="testStateDetail">
		select dl.diagnostic_list_id, dl.diagnostic_list_barcode, dl.diagnostic_list_state,
			   dl.diagnostic_specimen_number, dl.receipt_id, dl.staff_id, dl.staff_name, s.search_id,
			   s.symptom_id, b.bundle_id, b.bundle_name, b.bundle_specimen, b.bundle_bottle, b.bundle_lab
		from diagnostic_lists as dl, searchs as s, bundles as b
		where dl.receipt_id = #{receiptId} and dl.search_id = s.search_id and s.bundle_id = b.bundle_id
	</select>
	
	<update id="updateStateDetail">
		update diagnostic_lists SET diagnostic_list_state = #{state}
		<if test="state == '검사완료'">
			,diagnostic_specimen_number = 
			case
			<foreach collection="specimenNums" item="item">
				when diagnostic_list_id = #{item.rowkey} then #{item.num}
			</foreach>
			end 
		</if>
		where diagnostic_list_id in
		<foreach collection="rowKeys" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</update>
	
	<select id="getDiagnosticDataByDate" resultType="diagnosticData">
 		select p.patient_id, p.patient_name, dl.diagnostic_list_id, dl.diagnostic_list_barcode, dl.diagnostic_list_state,
 				dl.diagnostic_specimen_number, dl.staff_id, dl.search_id, dl.staff_name, dl.diagnostic_result_state,
 		 		rao.receipt_id, date_format(rao.receipt_datetime, '%y-%m-%d') as receipt_datetime, rao.receipt_result_state
		from receipt_and_opinions rao, patients p, diagnostic_lists dl
		where rao.patient_id = p.patient_id and dl.receipt_id = rao.receipt_id and rao.receipt_datetime Like CONCAT('%', #{receipt_datetime}, '%') and dl.diagnostic_specimen_number != '' and dl.diagnostic_specimen_number is not null
	</select>
	
	<select id="getDiagnosticDataByName" resultType="diagnosticData">
 		select p.patient_id, p.patient_name, dl.diagnostic_list_id, dl.diagnostic_list_barcode, dl.diagnostic_list_state,
 				dl.diagnostic_specimen_number, dl.staff_id, dl.search_id, dl.staff_name, dl.diagnostic_result_state,
 		 		rao.receipt_id, date_format(rao.receipt_datetime, '%y-%m-%d') as receipt_datetime, rao.receipt_result_state
		from receipt_and_opinions rao, patients p, diagnostic_lists dl
		where rao.patient_id = p.patient_id and dl.receipt_id = rao.receipt_id and p.patient_name Like CONCAT('%', #{patient_name}, '%')
				and rao.receipt_datetime Like CONCAT('%', #{receipt_datetime}, '%') and dl.diagnostic_specimen_number != '' and dl.diagnostic_specimen_number is not null
	</select>
	
	<select id="getPatientData" resultType="patientData">
 		select distinct rao.receipt_id, date_format(rao.receipt_datetime, '%Y-%m-%d') as receipt_datetime, p.patient_name, s.symptom_name,
 				p.patient_sex, substring(p.patient_ssn,1,6) as ssn, date_format(rao.receipt_datetime, '%Y-%m-%d') as blood_datetime
		from patients p, receipt_and_opinions rao, diagnostic_lists dl, searchs s
		where p.patient_id = rao.patient_id and rao.receipt_id = dl.receipt_id and dl.search_id = s.search_id and rao.receipt_id=#{receipt_id}
		limit 1
	</select>
	
	<select id="getPatientDataBySpecimen" resultType="patientData">
 		select distinct rao.receipt_id, date_format(rao.receipt_datetime, '%Y-%m-%d') as receipt_datetime, p.patient_name, s.symptom_name,
 				p.patient_sex, substring(p.patient_ssn,1,6) as ssn, date_format(rao.receipt_datetime, '%Y-%m-%d') as blood_datetime
		from patients p, receipt_and_opinions rao, diagnostic_lists dl, searchs s
		where p.patient_id = rao.patient_id and rao.receipt_id = dl.receipt_id and dl.search_id = s.search_id and dl.diagnostic_specimen_number=#{diagnostic_specimen_number};
	</select>
	
	<select id="getSpecimenData" resultType="diagnosticData">
 		select p.patient_id, p.patient_name, dl.diagnostic_list_id, dl.diagnostic_list_barcode, dl.diagnostic_list_state,
 				dl.diagnostic_specimen_number, dl.staff_id, dl.search_id, dl.staff_name, dl.diagnostic_result_state,
 		 		rao.receipt_id, date_format(rao.receipt_datetime, '%y-%m-%d') as receipt_datetime, rao.receipt_result_state, dl.doctor_name
		from receipt_and_opinions rao, patients p, diagnostic_lists dl
		where rao.patient_id = p.patient_id and dl.receipt_id = rao.receipt_id and dl.diagnostic_specimen_number = #{diagnostic_specimen_number}
	</select>
	
	<update id="updateFinishedResultState">
		update diagnostic_lists SET diagnostic_result_state = 'ⓞ'
		where diagnostic_list_id in (
				select diagnostic_list_id
				from diagnostic_results dr
				where diagnostic_results_id = #{diagnostic_results_id})
	</update>
	
	<update id="updateAllFinishedResultStateByReceipt">
		update diagnostic_lists SET diagnostic_result_state = 'ⓞ'
		where receipt_id in (
			select receipt_id
			from (
				select receipt_id
				from diagnostic_lists dl, diagnostic_results dr
		        where dl.diagnostic_list_id = dr.diagnostic_list_id and diagnostic_results_id = #{diagnostic_results_id}) as temp)
	</update>
	
	<select id="countLabPatient" resultType="labCharts">
		select count(case when b.bundle_lab = '검사실1' then 1 end) as lab1,
			   count(case when b.bundle_lab = '검사실2' then 1 end) as lab2,
			   count(case when b.bundle_lab = '검사실3' then 1 end) as lab3
			from receipt_and_opinions as rao, diagnostic_lists as dl, searchs as s, bundles as b
			where rao.receipt_id = dl.receipt_id and dl.search_id = s.search_id and s.bundle_id = b.bundle_id and dl.diagnostic_list_state != '검사완료' and date(receipt_datetime) = date(now());
	</select>
	
	
	<select id="selectTestCount" resultType="int">
      	select count(*)
		from diagnostic_lists
    </select>
	
	<select id="getDiagnosticDataByReceiptId" resultType="diagnosticData">
 		select p.patient_id, p.patient_name, dl.diagnostic_list_id, dl.diagnostic_list_barcode, dl.diagnostic_list_state,
 				dl.diagnostic_specimen_number, dl.staff_id, dl.search_id, dl.staff_name, dl.diagnostic_result_state,
 		 		rao.receipt_id, date_format(rao.receipt_datetime, '%y-%m-%d') as receipt_datetime, rao.receipt_result_state
		from receipt_and_opinions rao, patients p, diagnostic_lists dl
		where rao.patient_id = p.patient_id and dl.receipt_id = rao.receipt_id and rao.receipt_id = #{receipt_id} and dl.diagnostic_specimen_number != '' and dl.diagnostic_specimen_number is not null
	</select>
</mapper>